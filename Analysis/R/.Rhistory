library(tidyverse)
library(magrittr)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
library(brms)
library(modelr)
library(tidybayes)
library(ggstance)
df <- read.csv("../data/Data.csv")
df %<>%
na.omit() %>%
select(id, white, female, pwealthqn, wealthqn) %>%
rename(
quantile = wealthqn,
pquantile = pwealthqn
) %>%
mutate(
id = as.factor(id),
white = as.factor(white),
female = as.factor(female),
pquantile = as.factor(pquantile)#,
#quantile = as.factor(quantile)
) %>%
as.data.frame(.)
head(df)
load("wealth-mob.models.RData")
#m1.olog <- brm(quantile ~ pquantile + cs(white), data = df, family = "acat", prior=prior(normal(0, 1), class=b), iter = 5000, warmup = 2000, chains = 2, cores = 2)
# m3.olog <- brm(quantile ~ pquantile + white, data = df, family = cumulative("logit"), prior=prior(normal(0, 1), class=b), iter = 5000, warmup = 2000, chains = 2, cores = 2)
summary(m1.olog)
df %>%
data_grid(pquantile, white) %>%
add_fitted_draws(m1.olog, re_formula = NA) %>%
group_by(white, pquantile, .category) %>%
mean_qi(.value) %>%
mutate(.value = round(.value, 2))
summary(m2.multinom)
df %>%
data_grid(pquantile, white) %>%
add_fitted_draws(m1.olog, re_formula = NA) %>%
group_by(.category, pquantile, white) %>%
ggplot(aes(y = .category, x = .value, color = white))+
stat_pointintervalh(.width = 0.95, position = position_dodgev(height = 0.5), show.legend = TRUE) +
facet_grid(.~pquantile)
df %>%
data_grid(pquantile, white) %>%
add_fitted_draws(m2.multinom, re_formula = NA) %>%
group_by(white, pquantile, .category) %>%
ggplot(aes(y = .category, x = .value, color = white))+
stat_pointintervalh(.width = 0.95, position = position_dodgev(height = 0.5), show.legend = TRUE) +
facet_grid(.~pquantile)
library(ordinal)
df %<>%
mutate(c_quantile = as.factor(quantile))
m1.olog.lm <- clm(c_quantile ~ pquantile + white, data = df, link = "logit")
df %>%
data_grid(pquantile, white) %>%
predict(m1.olog.lm, ., type="prob") %>%
as.data.frame(.) %>%
mutate(
pquantile = rep(1:(nrow(.)/2), each = 2),
white = (0:(nrow(.)-1) %% 2)
) %>%
gather(quantile, .value, 1:5) %>%
separate(col = quantile, into = c('delete', 'c_quantile'), sep = 't.') %>%
select(-delete) %>%
mutate(.value = round(.value, 2)) %>%
arrange(desc(pquantile), desc(c_quantile), desc(white))
library(nnet)
m2.multinom.lm <- multinom(quantile ~ pquantile + white, data = df, Hess = TRUE)
summary(m2.multinom.lm)
df %>%
data_grid(pquantile, white) %>%
predict(m2.multinom.lm, ., "probs") %>%
as.data.frame(.) %>%
mutate(
pquantile = rep(1:(nrow(.)/2), each = 2),
white = (0:(nrow(.)-1) %% 2)
) %>%
gather(quantile, .value, c(`1`, `2`, `3`, `4`, `5`)) %>%
mutate(.value = round(.value, 2)) %>%
arrange(desc(pquantile), desc(quantile), desc(white))
