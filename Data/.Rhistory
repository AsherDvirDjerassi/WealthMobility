child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "[0-9]{2}", remove = TRUE)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "[0-9]", remove = TRUE)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "[0-9]+", remove = TRUE)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", remove = TRUE)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "([[:digit:]]+)", remove = TRUE)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "([[:digit:]]+[:punct:]+)", remove = TRUE)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "([[:digit:]]+[:punct:]+[:space:]+)", remove = TRUE)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "([[:digit:]+[:punct:]+[:space:]+)", remove = TRUE)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "([[:digit:]+[:punct:]+[:space:]+])", remove = TRUE)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "([[:digit:][:punct:][:space:]]+)", remove = TRUE)
mutate(
race = ifelse(race == "No", "Black", "White")
)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "([[:digit:][:punct:][:space:]]+)", remove = TRUE) %>%
mutate(
race = ifelse(race == "No", "Black", "White")
)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "([[:digit:][:punct:][:space:]]+)", remove = TRUE) %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
parent = as.numeric(as.factor(parent))
)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "([[:digit:][:punct:][:space:]]+)", remove = TRUE) %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
parent = as.numeric(as.factor(parent)) - 1
)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "([[:digit:][:punct:][:space:]]+)", remove = TRUE) %>%
extract(child, into = "child", regex = "([[:digit:][:punct:][:space:]]+)", remove = TRUE) %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
parent = as.numeric(as.factor(parent)) - 1,
child = as.numeric(as.factor(parent)) - 1 + 10
)
links.mr <- df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "([[:digit:][:punct:][:space:]]+)", remove = TRUE) %>%
extract(child, into = "child", regex = "([[:digit:][:punct:][:space:]]+)", remove = TRUE) %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
source = as.numeric(as.factor(parent)) - 1,
target = as.numeric(as.factor(parent)) - 1 + 10
) %>%
select(source, target, value)
links.mr
write_json(links.mr, "links.json", pretty = TRUE)
write_json(nodes.mr, "nodes.json", pretty = TRUE)
links.mr <- df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
extract(parent, into = "parent", regex = "([[:digit:][:punct:][:space:]]+)", remove = TRUE) %>%
extract(child, into = "child", regex = "([[:digit:][:punct:][:space:]]+)", remove = TRUE) %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
source = as.numeric(as.factor(parent)) - 1,
target = as.numeric(as.factor(parent)) - 1 + 10,
value = value * 100
) %>%
select(source, target, value)
links.mr
write_json(links.mr, "links.json", pretty = TRUE)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
parent = as.factor(paste("Parent", race, parent, sep = " ")),
source = as.numeric(parent) - 1,
child = as.factor(paste("Child", race, child, sep = " ")),
target = as.numeric(child) - 1 + 10,
value = value*100
) %>%
select(source, target, value)
#links.mr <-
df.mr %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
parent = as.factor(paste("Parent", race, parent, sep = " ")),
source = as.numeric(parent) - 1,
child = as.factor(paste("Child", race, child, sep = " ")),
target = as.numeric(child) - 1 + 10,
value = value*100
) #%>%
nodes.mr <- df.mr %>%
mutate(
o = as.character(o),
o = replace(o, o == "Lowest Quintile", "Quintile 1"),
o = replace(o, o == "Highest Quintile", "Quintile 5"),
d = as.character(d),
d = replace(d, d == "Lowest Quintile", "Quintile 1"),
d = replace(d, d == "Highest Quintile", "Quintile 5")
) %>%
select(o, d, white) %>%
rename(
Parent = o,
Child = d,
race = white
) %>%
gather(type, name, -race) %>%
unique() %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
name = paste(name, sep = " "),
node = seq.int(nrow(.))-1
) %>%
select(node, name, race, type)
nodes.mr
links.mr <- df.mr %>%
mutate(
o = as.character(o),
o = replace(o, o == "Lowest Quintile", "Quintile 1"),
o = replace(o, o == "Highest Quintile", "Quintile 5"),
d = as.character(d),
d = replace(d, d == "Lowest Quintile", "Quintile 1"),
d = replace(d, d == "Highest Quintile", "Quintile 5")
) %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
parent = as.factor(paste("Parent", race, parent, sep = " ")),
source = as.numeric(parent) - 1,
child = as.factor(paste("Child", race, child, sep = " ")),
target = as.numeric(child) - 1 + 10,
value = value*100
) %>%
select(source, target, value)
links.mr
df.mr <- read.csv("1-mobility-rates.csv", header=TRUE)
head(df.mr)
nodes.mr <- df.mr %>%
mutate(
o = as.character(o),
o = replace(o, o == "Lowest Quintile", "top 20% wealth quantile"),
o = replace(o, o == "Quintile 2", "20% - 40% wealth quantile"),
o = replace(o, o == "Quintile 3", "40% - 60% wealth quantile"),
o = replace(o, o == "Quintile 4", "60% - 80% wealth quantile"),
o = replace(o, o == "Highest Quintile", "bottom 20% wealth quantile"),
d = as.character(d),
d = replace(d, d == "Lowest Quintile", "top 20% wealth quantile"),
d = replace(d, d == "Quintile 2", "20% - 40% wealth quantile"),
d = replace(d, d == "Quintile 3", "40% - 60% wealth quantile"),
d = replace(d, d == "Quintile 4", "60% - 80% wealth quantile"),
d = replace(d, d == "Highest Quintile", "bottom 20% wealth quantile")
) %>%
select(o, d, white) %>%
rename(
Parent = o,
Child = d,
race = white
) %>%
gather(type, name, -race) %>%
unique() %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
name = paste(name, sep = " "),
node = seq.int(nrow(.))-1
) %>%
select(node, name, race, type)
nodes.mr
links.mr <- df.mr %>%
mutate(
o = as.character(o),
o = replace(o, o == "Lowest Quintile", "Quintile 1"),
o = replace(o, o == "Highest Quintile", "Quintile 5"),
d = as.character(d),
d = replace(d, d == "Lowest Quintile", "Quintile 1"),
d = replace(d, d == "Highest Quintile", "Quintile 5")
) %>%
select(o, d, white, prob) %>%
rename(
parent = o,
child = d,
race = white,
value = prob
) %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
parent = as.factor(paste("Parent", race, parent, sep = " ")),
source = as.numeric(parent) - 1,
child = as.factor(paste("Child", race, child, sep = " ")),
target = as.numeric(child) - 1 + 10,
value = value*100
) %>%
select(source, target, value)
links.mr
write_json(links.mr, "links.json", pretty = TRUE)
write_json(nodes.mr, "nodes.json", pretty = TRUE)
nodes.mr <- df.mr %>%
mutate(
o = as.character(o),
o = replace(o, o == "Lowest Quintile", "Quintile 1"),
o = replace(o, o == "Highest Quintile", "Quintile 5"),
d = as.character(d),
d = replace(d, d == "Lowest Quintile", "Quintile 1"),
d = replace(d, d == "Highest Quintile", "Quintile 5")
) %>%
select(o, d, white) %>%
rename(
Parent = o,
Child = d,
race = white
) %>%
gather(type, name, -race) %>%
unique() %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
name = paste(name, sep = " "),
node = seq.int(nrow(.))-1
) %>%
select(node, name, race, type)
nodes.mr
nodes.mr <- df.mr %>%
mutate(
o = as.character(o),
o = replace(o, o == "Lowest Quintile", "top 20% wealth quantile"),
o = replace(o, o == "Quintile 2", "20% - 40% wealth quantile"),
o = replace(o, o == "Quintile 3", "40% - 60% wealth quantile"),
o = replace(o, o == "Quintile 4", "60% - 80% wealth quantile"),
o = replace(o, o == "Highest Quintile", "bottom 20% wealth quantile"),
d = as.character(d),
d = replace(d, d == "Lowest Quintile", "top 20% wealth quantile"),
d = replace(d, d == "Quintile 2", "20% - 40% wealth quantile"),
d = replace(d, d == "Quintile 3", "40% - 60% wealth quantile"),
d = replace(d, d == "Quintile 4", "60% - 80% wealth quantile"),
d = replace(d, d == "Highest Quintile", "bottom 20% wealth quantile")
) %>%
select(o, d, white) %>%
rename(
Parent = o,
Child = d,
race = white
) %>%
gather(type, name, -race) %>%
unique() %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
name = paste(name, sep = " "),
node = seq.int(nrow(.))-1
) %>%
select(node, name, race, type)
nodes.mr
nodes.mr <- df.mr %>%
mutate(
o = as.character(o),
o = replace(o, o == "Lowest Quintile", "bottom 20% wealth quantile"),
o = replace(o, o == "Quintile 2", "60% - 80% wealth quantile"),
o = replace(o, o == "Quintile 3", "40% - 60% wealth quantile"),
o = replace(o, o == "Quintile 4", "20% - 40% wealth quantile"),
o = replace(o, o == "Highest Quintile", "top 20% wealth quantile"),
d = as.character(d),
d = replace(d, d == "Lowest Quintile", "bottom 20% wealth quantile"),
d = replace(d, d == "Quintile 2", "60% - 80% wealth quantile"),
d = replace(d, d == "Quintile 3", "40% - 60% wealth quantile"),
d = replace(d, d == "Quintile 4", "20% - 40% wealth quantile"),
d = replace(d, d == "Highest Quintile", "top 20% wealth quantile")
) %>%
select(o, d, white) %>%
rename(
Parent = o,
Child = d,
race = white
) %>%
gather(type, name, -race) %>%
unique() %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
name = paste(name, sep = " "),
node = seq.int(nrow(.))-1
) %>%
select(node, name, race, type)
nodes.mr
write_json(nodes.mr, "nodes.json", pretty = TRUE)
df.ws <- read.csv("2-wealth-structure.csv", header=TRUE)
head(df.ws)
nodes.ws <- df.ws %>%
mutate(
o = as.character(o),
o = replace(o, o == "Lowest Quintile", "bottom 20% wealth quantile"),
o = replace(o, o == "Quintile 2", "60% - 80% wealth quantile"),
o = replace(o, o == "Quintile 3", "40% - 60% wealth quantile"),
o = replace(o, o == "Quintile 4", "20% - 40% wealth quantile"),
o = replace(o, o == "Highest Quintile", "top 20% wealth quantile"),
d = as.character(d),
d = replace(d, d == "Lowest Quintile", "bottom 20% wealth quantile"),
d = replace(d, d == "Quintile 2", "60% - 80% wealth quantile"),
d = replace(d, d == "Quintile 3", "40% - 60% wealth quantile"),
d = replace(d, d == "Quintile 4", "20% - 40% wealth quantile"),
d = replace(d, d == "Highest Quintile", "top 20% wealth quantile")
) %>%
select(o, d, white) %>%
rename(
Parent = o,
Child = d,
race = white
) %>%
gather(type, name, -race) %>%
unique() %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
name = paste(type, race, name, sep = " "),
node = seq.int(nrow(.))-1
) %>%
select(node, name, race)
nodes.ws
links.ws <- df.ws %>%
mutate(
o = as.character(o),
o = replace(o, o == "Lowest Quintile", "Quintile 1"),
o = replace(o, o == "Highest Quintile", "Quintile 5"),
d = as.character(d),
d = replace(d, d == "Lowest Quintile", "Quintile 1"),
d = replace(d, d == "Highest Quintile", "Quintile 5")
) %>%
select(o, d, white, n) %>%
rename(
parent = o,
child = d,
race = white,
value = n
) %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
parent = as.factor(paste("Parent", race, parent, sep = " ")),
source = as.numeric(parent) - 1,
child = as.factor(paste("Child", race, child, sep = " ")),
target = as.numeric(child) - 1 + 10
) %>%
select(source, target, value)
links.ws
write_json(links.ws, "links.json", pretty = TRUE)
write_json(nodes.ws, "nodes.json", pretty = TRUE)
nodes.ws <- df.ws %>%
mutate(
o = as.character(o),
o = replace(o, o == "Lowest Quintile", "bottom 20% wealth quantile"),
o = replace(o, o == "Quintile 2", "60% - 80% wealth quantile"),
o = replace(o, o == "Quintile 3", "40% - 60% wealth quantile"),
o = replace(o, o == "Quintile 4", "20% - 40% wealth quantile"),
o = replace(o, o == "Highest Quintile", "top 20% wealth quantile"),
d = as.character(d),
d = replace(d, d == "Lowest Quintile", "bottom 20% wealth quantile"),
d = replace(d, d == "Quintile 2", "60% - 80% wealth quantile"),
d = replace(d, d == "Quintile 3", "40% - 60% wealth quantile"),
d = replace(d, d == "Quintile 4", "20% - 40% wealth quantile"),
d = replace(d, d == "Highest Quintile", "top 20% wealth quantile")
) %>%
select(o, d, white) %>%
rename(
Parent = o,
Child = d,
race = white
) %>%
gather(type, name, -race) %>%
unique() %>%
mutate(
race = ifelse(race == "No", "Black", "White"),
name = paste(name, sep = " "),
node = seq.int(nrow(.))-1
) %>%
select(node, name, race, type)
write_json(nodes.ws, "nodes.json", pretty = TRUE)
